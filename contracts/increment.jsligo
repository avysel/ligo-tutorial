type storage = int;

type parameter =
| ["Increment", int]
| ["Decrement", int]
| ["Reset"];

/* Two entrypoints */
const add = ([store, delta] : [storage, int]) => store + delta;
const sub = ([store, delta] : [storage, int]) => store - delta;

/* Main access point that dispatches to the entrypoints according to
   the smart contract parameter. */
const main = ([action, store] : [parameter, storage]) : [list <operation>, storage] => {
 return [
   list([]),    // No operations
   (match (action, {
    Increment: n => add ([store, n]),
    Decrement: n => sub ([store, n]),
    Reset:     ()  => 0}))
  ]
};